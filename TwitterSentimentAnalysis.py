{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f64e73b0-4c78-46bc-9d13-db18a49e581a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tweepy\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7dc77993-83b5-4cb7-b098-6fc1d6191d21",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('keys.txt') as f:\n",
    "    keys = f.readlines()\n",
    "keys = list(map(lambda x: x.split(\":\")[1].split(\"\\n\")[0],keys))        \n",
    "\n",
    "#Here we are writing a function to read a text file containing the login info for the API \n",
    "#Split it by a constraint into elements and pick the desired info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7a937d09-ceea-4108-be87-c0dce65ac6c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "auth = tweepy.OAuthHandler(keys[0], keys[1])\n",
    "auth.set_access_token(keys[2], keys[3])\n",
    "api = tweepy.API(auth)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "790e7862-4b0e-4be7-a94f-2b9cee1f8ed2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Today's date: 2021-07-02\n"
     ]
    }
   ],
   "source": [
    "from datetime import date           \n",
    "today = date.today()                       # Here we need to specify the date when the data is pull \n",
    "print(\"Today's date:\", today)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f6484f3-172b-47ec-a285-8ea58c6041e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### WE WILL SET A LIST OF WORDS AND PULL THEIR FULL TWEETS  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "536af23f-c733-4882-aa5d-475f3723ef87",
   "metadata": {},
   "outputs": [],
   "source": [
    "keywords = ['Dogecoin','Bitcoin','Ethereum','Tether', 'XRP']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "14a6594e-967a-46d4-aa0d-0a5d2dd9fac7",
   "metadata": {},
   "outputs": [],
   "source": [
    "number_of_tweets = 1000\n",
    "tweets = []              # store specific results \n",
    "likes = []\n",
    "time = []\n",
    "category = []\n",
    "\n",
    "for word in keywords:\n",
    "    for i in tweepy.Cursor(api.search, q = word, tweet_mode = \"extended\").items(number_of_tweets):\n",
    "        tweets.append(i.full_text)\n",
    "        likes.append(i.favorite_count)\n",
    "        time.append(i.created_at)\n",
    "        category.append(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ddfe8073-4a43-4db5-ad0c-dd0913f5565e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweets</th>\n",
       "      <th>likes</th>\n",
       "      <th>time</th>\n",
       "      <th>category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Day 26 &amp;amp; counting. My wife left me but my ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:31</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>RT @lisadoge: I’ll send 100$ in #dogecoin to a...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:29</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>@elonmusk Can I buy a Tesla with #dogecoin yet...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:28</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>RT @BillyM2k: I signed my iPad and sent it to ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:27</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RT @itsALLrisky: GameStop passed on the baton ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:25</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>RT @LorettaCrypto: If you are gifted $5,000 wo...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:35</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>@commaddore @QuincyChillBro @lala_pete @RuleXR...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:32</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>I’ve found a gem on our fishy DeFi sea! Check ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:31</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>@cryptocom Name one use case for Dogecoin that...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:28</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>buy $XRP on #futures @ 0.6462 https://t.co/D1A...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:26</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                tweets  likes  \\\n",
       "0    Day 26 &amp; counting. My wife left me but my ...      0   \n",
       "1    RT @lisadoge: I’ll send 100$ in #dogecoin to a...      0   \n",
       "2    @elonmusk Can I buy a Tesla with #dogecoin yet...      0   \n",
       "3    RT @BillyM2k: I signed my iPad and sent it to ...      0   \n",
       "4    RT @itsALLrisky: GameStop passed on the baton ...      0   \n",
       "..                                                 ...    ...   \n",
       "995  RT @LorettaCrypto: If you are gifted $5,000 wo...      0   \n",
       "996  @commaddore @QuincyChillBro @lala_pete @RuleXR...      0   \n",
       "997  I’ve found a gem on our fishy DeFi sea! Check ...      0   \n",
       "998  @cryptocom Name one use case for Dogecoin that...      0   \n",
       "999  buy $XRP on #futures @ 0.6462 https://t.co/D1A...      0   \n",
       "\n",
       "                   time  category  \n",
       "0   2021-07-03 03:54:31  Dogecoin  \n",
       "1   2021-07-03 03:54:29  Dogecoin  \n",
       "2   2021-07-03 03:54:28  Dogecoin  \n",
       "3   2021-07-03 03:54:27  Dogecoin  \n",
       "4   2021-07-03 03:54:25  Dogecoin  \n",
       "..                  ...       ...  \n",
       "995 2021-07-03 03:40:35       XRP  \n",
       "996 2021-07-03 03:40:32       XRP  \n",
       "997 2021-07-03 03:40:31       XRP  \n",
       "998 2021-07-03 03:40:28       XRP  \n",
       "999 2021-07-03 03:40:26       XRP  \n",
       "\n",
       "[1000 rows x 4 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df = pd.DataFrame({'tweets':tweets,'likes':likes,'time':time, 'category':category})\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "68e38e56-a59e-4b2a-96db-597a2696f254",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>likes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>382.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.350785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.097593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>13.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            likes\n",
       "count  382.000000\n",
       "mean     0.350785\n",
       "std      1.097593\n",
       "min      0.000000\n",
       "25%      0.000000\n",
       "50%      0.000000\n",
       "75%      0.000000\n",
       "max     13.000000"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "6b230a35-54a4-41dd-8f2c-c07835611d15",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[~df.tweets.str.contains(\"RT\")] # HERE WE DROP RETWEETS\n",
    "df = df.reset_index(drop=True)  # THIS resets THE INDICES, ITS THE FIRST COLUMN "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "003ef94d-99dd-4a06-9248-ffd7e6e3b287",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweets</th>\n",
       "      <th>likes</th>\n",
       "      <th>time</th>\n",
       "      <th>category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Day 26 &amp;amp; counting. My wife left me but my ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:31</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>@elonmusk Can I buy a Tesla with #dogecoin yet...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:28</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Bitcoin Price (USD): 33401.71 \\nEthereum Price...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:16</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>#tumblr #deal #twitter #facebook #instagram #d...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:14</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>#freelancer #freelancing, #Smart, #seamless #f...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:54:14</td>\n",
       "      <td>Dogecoin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>@TheKoodge @BitcoinMagazine @hodgetwins Yeah j...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:47</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>@commaddore @QuincyChillBro @lala_pete @RuleXR...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:32</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>I’ve found a gem on our fishy DeFi sea! Check ...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:31</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>@cryptocom Name one use case for Dogecoin that...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:28</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>381</th>\n",
       "      <td>buy $XRP on #futures @ 0.6462 https://t.co/D1A...</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-03 03:40:26</td>\n",
       "      <td>XRP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>382 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                tweets  likes  \\\n",
       "0    Day 26 &amp; counting. My wife left me but my ...      0   \n",
       "1    @elonmusk Can I buy a Tesla with #dogecoin yet...      0   \n",
       "2    Bitcoin Price (USD): 33401.71 \\nEthereum Price...      0   \n",
       "3    #tumblr #deal #twitter #facebook #instagram #d...      0   \n",
       "4    #freelancer #freelancing, #Smart, #seamless #f...      0   \n",
       "..                                                 ...    ...   \n",
       "377  @TheKoodge @BitcoinMagazine @hodgetwins Yeah j...      0   \n",
       "378  @commaddore @QuincyChillBro @lala_pete @RuleXR...      0   \n",
       "379  I’ve found a gem on our fishy DeFi sea! Check ...      0   \n",
       "380  @cryptocom Name one use case for Dogecoin that...      0   \n",
       "381  buy $XRP on #futures @ 0.6462 https://t.co/D1A...      0   \n",
       "\n",
       "                   time  category  \n",
       "0   2021-07-03 03:54:31  Dogecoin  \n",
       "1   2021-07-03 03:54:28  Dogecoin  \n",
       "2   2021-07-03 03:54:16  Dogecoin  \n",
       "3   2021-07-03 03:54:14  Dogecoin  \n",
       "4   2021-07-03 03:54:14  Dogecoin  \n",
       "..                  ...       ...  \n",
       "377 2021-07-03 03:40:47       XRP  \n",
       "378 2021-07-03 03:40:32       XRP  \n",
       "379 2021-07-03 03:40:31       XRP  \n",
       "380 2021-07-03 03:40:28       XRP  \n",
       "381 2021-07-03 03:40:26       XRP  \n",
       "\n",
       "[382 rows x 4 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "93c628dd-15c2-4699-85fe-b4b6b5e2eb2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "path = \"C:/Users/Test/OneDrive/Escritorio/GITHUB PROJECTS/Twitter sentiment analysis/DATA/\" # SET THE PATH FOR WHERE YOUR DATA FOLDER IS GOING TO BE\n",
    "filename = 'tweets_for_'+str(today)+'.csv'      #WE GIVE THE NAME WHILE PULLING THE DATE OF ACTION\n",
    "df.to_csv(path+filename)  # WE GO AHEAD AND PULL THE DATA WITH THE RIGHT NAME + DATE "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4247d259-0211-42e6-ab79-b1d69a335307",
   "metadata": {},
   "outputs": [],
   "source": [
    "### NOW WE WILL SCHEDULE THE DATA PULLS "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a04abbf-3d5b-4122-a5cc-a38a1017136b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32e84bdd-30e7-416c-8a93-d9c9f9f31897",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20366bc8-987b-45a4-bbeb-e5168273dc36",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
